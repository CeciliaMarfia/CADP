{1-Dado el siguiente programa, indicar qué imprime.}
program alcance1;
var a,b: integer;
 procedure uno;
 var b: integer;
 begin
 b := 3;
 writeln(b);
 end;
begin
 a:= 1;
 b:= 2;
 uno;
 writeln(b, a);
 //imprime:3..........2,1
end.

{2. Dado el siguiente programa, indicar cuál es el error y su causa.}
program alcance2;
var a,b: integer;
procedure uno;
begin
 b := 3;
 writeln(b);
end;
begin
 a:= 1;
 b:= 2;
 uno;
 writeln(b, a); // imprime 3 y 1
end.

{3. Dado el siguiente programa, indicar cuál es el error y su causa.}
program alcance3;
var a: integer;
procedure uno;
var b: integer;
begin
 b:= 2;
 writeln(b);
end;
begin
 a:= 1;
 uno;
 writeln(a, b);//el error es que quieren imprimir en el pp una variable local al procedimiento
end.

{4. Dado los siguientes programas, explicar la diferencia}
program alcance4a;
var a,b: integer; //posee dos variables globales
procedure uno;
begin
 a := 1;
 writeln(a);
end;
begin
 a:= 1;
 b:= 2;
 uno;
 writeln(b, a);
end.
{program alcance4b; // no tiene variables globales
procedure uno;
begin
 a := 1;
 writeln(a);
end;
var a,b: integer; //tiene variable locales
begin
 a:= 1;
 b:= 2;
 uno;
 writeln(b, a);
end.
}

{5. Dado el siguiente programa, indicar cuál es el error.}
program alcance4;
function cuatro: integer;
begin
 cuatro:= 4;
end;
var a: integer;
begin
 cuatro; //mal la invocación
 writeln(a);
end.

{6. a. Realice un módulo que lea de teclado números enteros hasta que llegue un valor negativo. Al finalizar la
lectura el módulo debe imprimir en pantalla cuál fue el número par más alto.}

program Hello;
procedure parMasAlto;
var
    num,masAlto:integer;
begin
    masAlto:=-1;
    writeln('Ingrese un número:');
    readln(num);
    while (num > 0) do begin
        if (num mod 2 = 0) and (num > masAlto) then begin
            masAlto:=num;
        end;
    writeln('Ingrese un número:');
    readln(num);
    end;
    writeln('el número par más alto:',masAlto);
end;
{b. Implemente un programa que invoque al módulo del inciso a.}
begin
    parMasAlto;
end.

{7. Dado el siguiente programa:}
program alcanceYFunciones;
var
    suma, cant : integer; //suma =48 y cant=6 
function calcularPromedio : real;
var
    prom : real;
begin
    if (cant = 0) then
        prom := -1
    else
    prom := suma / cant;
    calcularPromedio:=prom;
end;
var
    prom:real;
begin { programa principal }
    readln(suma);
    readln(cant);
    prom:= calcularPromedio;
    if (prom <> -1) then begin //(a) falta enviarle los parámetros
        //cant := 0;
        writeln('El promedio es: ' , prom:2:2)//(b) podría asignarle a una variable el valor de la función
    end
    else
    writeln('Dividir por cero no parece ser una buena idea');
end.
{a) La función calcularPromedio calcula y retorna el promedio entre las variables globales suma y cant, pero
parece incompleta. ¿qué debería agregarle para que funcione correctamente?
b) En el programa principal, la función calcularPromedio es invocada dos veces, pero esto podría mejorarse.
¿cómo debería modificarse el programa principal para invocar a dicha función una única vez?
c) Si se leen por teclado los valores 48 (variable suma) y 6 (variable cant), ¿qué resultado imprime el programa?
Considere las tres posibilidades:
i) El programa original NO IMPRIME NADA
ii) El programa luego de realizar la modificación del inciso a) s/h
iii) El programa luego de realizar las modificaciones de los incisos a) y b) 8,00}

{8 Dado el siguiente programa:}
program anidamientos;
procedure leer;
var
    letra : char;
function analizarLetra : boolean
begin
    if (letra >= ‘a’) and (letra <= ‘z’) then
        analizarLetra := true;
    else
        if (letra >= ‘A’) and (letra <= ‘Z’) then
            analizarletra := false;
end; { fin de la funcion analizarLetra }
begin
    readln(letra);
    if (analizarLetra) then
        writeln(‘Se trata de una minúscula’)
    else
     writeln(‘Se trata de una mayúscula’);
end; { fin del procedure leer}
var
     ok : boolean;
begin { programa principal }
     leer;
    //ok := analizarLetra; me rompe el pp
 //if ok then
 //writeln(‘Gracias, vuelva prontosss’);
end.
{a) La función analizarLetra fue declarada como un submódulo dentro del procedimiento leer. Pero esto puede
traer problemas en el código del programa principal.
i) ¿qué clase de problema encuentra? QUE EL PP QUIERE ACCEDER A UNA FUNCIÓN QUE SOLO ES CONOCIDA POR EL PROCEDURE LEER
ii) ¿cómo se puede resolver el problema para que el programa compile y funcione correctamente? SACO LA FUNCIÓN Y LA PONGO ANTES DEL PROCEDIMIENTO
b) La función analizarLetra parece incompleta, ya que no cubre algunos valores posibles de la variable letra.
i) ¿De qué valores se trata?
ii) ¿Qué sucede en nuestro programa si se ingresa uno de estos valores?
iii) ¿Cómo se puede resolver este problema?}

program alcanceYFunciones;
var
	suma, cant : Integer;
function calcularPromedio : real;
var
	prom : Real;
begin
	if(cant <= 0) then
		prom := -1
	else
		prom := suma / cant;
		calcularPromedio:=prom;
End;
Var
	prom:real;
Begin { programa principal }
  Readln(suma);
  Readln(cant);
	prom:= calcularPromedio;
  If (prom <> -1) then begin
		Writeln('El promedio es: ' , prom:0:2)
    End
	else
		writeln('Dividir por cero no parece ser una buena idea');
readln;
End.


//CREO QUE FALTABAN ALGUNAS COSAS DEL 7 Y 8
